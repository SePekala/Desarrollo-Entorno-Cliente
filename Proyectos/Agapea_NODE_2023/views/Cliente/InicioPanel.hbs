<div class="container">
  <div class="row">
    <div class="col">
      <h2>Mi perfil</h2>
      <div></div>
      <!--sangria-->
      <form method="post" action="http://localhost:3000/Cliente/UpdateDatosCliente">

        <div class="alert alert-secondary" data-bs-toggle="collapse" href="#collapseDatos">Datos de perfil</div>
        <div class="collapse" id="collapseDatos">
          <div class="row">
            <div class="col-sm-6">
              <div class="row text-muted">Correo electrónico</div>
              <div class="row"><input type="text" id="inputEmail" class="input-group-text" style="width:90%"
                  name="email" placeholder="{{cliente.cuenta.email}}" /></div>
              <div class="row text-muted">Contraseña</div>
              <div class="row"><input type="password" id="inputPass" class="input-group-text" style="width:90%" /></div>
              <div class="row text-muted">Nombre</div>
              <div class="row"><input type="text" id="inputNombre" class="input-group-text" style="width:90%"
                  name="nombre" placeholder="{{cliente.nombre}}" /></div>

            </div>

            <div class="col-sm-6">
              <div class="row text-muted">Teléfono</div>
              <div class="row"><input type="text" id="inputTlfn" class="input-group-text" style="width:90%"
                  name="telefono" placeholder="{{cliente.telefono}}" /></div>
              <div class="row text-muted">Repetir la contraseña</div>
              <div class="row"><input type="password" id="inputPassRep" class="input-group-text" style="width:90%"
                  name="repassword" />
              </div>
              <div class="row text-muted">Apellidos</div>
              <div class="row"><input type="text" id="inputApellidos" class="input-group-text" style="width:90% "
                  name="apellidos" placeholder="{{cliente.apellidos}}" /></div>

            </div>
          </div>
          <div class="row"><span></span></div>
          <div class="row">
            <div class="col-sm-4">
              <div class="text-muted">Foto</div>
              <div id="avatarPerfil" class="card" style="width:200px;height:250px; background-color:aliceblue">
                <input type="file" accept="image/*" id="selectorImagen" name="imagen" style="visibility: hidden;" />
                <a onclick="javascript: $('#selectorImagen').click()">
                  <img id="imagenUsuario" style="width:200px;height:250px;"
                    src="http://localhost:3000/public/uploads_imagenes/{{cliente.cuenta.imagenAvatar}}" />
                </a>
              </div>
              <button type="button" id="botonUploadImagen" class="btn btn-link btn-sm" disabled>+ Sube una foto</button>
              <div id="mensajeRespuesta"></div>
            </div>
            <div class="col-sm-8">
              <div class="row text-muted">Usuario</div>
              <div class="row"><input type="text" id="inputUsuario" class="input-group-sm" name="usuario"
                  placeholder="{{cliente.cuenta.login}}" /></div>
              <div class="row text-muted">Genero</div>
              <div class="row">
                <select class="form-select" aria-label="Elige genero" id="genero" name="genero">
                  <option selected>Elige genero</option>

                  <option value="Hombre">Hombre</option>
                  <option value="Mujer">Mujer</option>
                </select>
              </div>
              <div class="row text-muted">Fecha de nacimiento</div>
              <div class="row">
                <div class="col-sm-4">
                  <select name="dia" id="dia" class="form-select">
                    <option value="-1" selected>Elige día</option>
                    {{#each dias}}
                    <option value="{{this}}">{{this}}</option>
                    {{/each}}
                  </select>
                </div>
                <div class="col-sm-4">
                  <select name="mes" id="mes" class="form-select">
                    <option value="-1" selected>Elige mes</option>
                    {{#each meses}}
                    <option value="{{@index}}">{{this}}</option>
                    {{/each}}

                  </select>
                </div>
                <div class="col-sm-4">
                  <select name="anio" id="anio" class="form-select">
                    <option value="-1" selected>Elige año</option>
                    {{#each anios}}
                    <option value="{{this}}">{{this}}</option>
                    {{/each}}
                  </select>
                </div>
              </div>
              <div class="row text-muted">Descripcion</div>
              <div class="row"><textarea id="textArea" placeholder="{{cliente.descripcion}}"
                  name="descripcion"></textarea> </div>
              <div class="ro2 align-text-top">
                <a href=""> Darme de baja</a>
                <button type="submit" class="btn btn-primary">Modificar Datos</button>
              </div>

            </div>
          </div>
        </div>

      </form>

      <div class="alert alert-secondary" data-bs-toggle="collapse" href="#collapseDirecciones">Direcciones</div>
      <div class="collapse" id="collapseDirecciones">
        <div>
          <p> Guarda todas tus direcciones de envío y elige la que usarás por defecto donde llegarán tus pedidos.</p>

          <p> Estas son las direcciones a las que puedes hacer tus envíos. Las direcciones de envío serán las que
            elijas mientras que la
            facturación será la misma en todas las direcciones:
          </p>
        </div>
        <hr>
        <!-- listado de direccions del cliente para borrar/modificar -->
        {{#each cliente.direcciones as |direccion|}}
            {{>VistaMiniDireccion direccion}}
        {{/each}}

        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
          + Nueva Direccion
        </button>

        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
          aria-labelledby="staticBackdropLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="container">
                  <div class="row">
                    <h3><strong>Nueva Direccion</strong></h3>
                  </div>
                  <hr>
                  <div class="row">
                    <p>Si desea que enviemos el pedido a una dirección distinta de la de facturación, modifique los
                      campos a </p>
                    <p>continuación según proceda.</p>
                  </div>
                  <div class="row">
                    <!-- formulario de alta de direcciones -->
                    <form method="post" id="formDirecciones" action="http://localhost:3000/Cliente/OperaDireccion" class="row g-3">

                      <div class="col-12">
                        <label for="inputCalle" class="form-label">Direccion de Envio:</label>
                        <input type="text" class="form-control" id="inputCalle" placeholder="Mi Direccion"
                          name="calle">
                      </div>

                      <div class="col-6">
                        <label for="inputCP" class="form-label">Codigo Postal:</label>
                        <input type="text" class="form-control" id="inputCP" placeholder="Codigo Postal: 28803"
                          name="cp">
                      </div>
                      <div class="col-6">
                        <label for="inputPais" class="form-label">Pais:</label>
                        <input type="text" class="form-control" id="inputPais" placeholder="España" name="pais">
                      </div>


                      <div class="col-6">
                        <label for="inputProvincia" class="form-label">Provincia:</label>
                        <select id="inputProvincia" class="form-select" name="provincia">
                          <option value="-1" selected> - Seleccionar Provincia - </option>
                          {{#each provincias}}
                          <option value="{{this.CPRO}}-{{this.PRO}}">{{this.PRO}}</option>
                          {{/each}}
                        </select>
                      </div>
                      <div class="col-6">
                        <label for="inputMunicipio" class="form-label">Municipio:</label>
                        <select id="inputMunicipio" class="form-select" name="municipio" disabled>
                          <option value="-1" selected> - Selecciona un Municipio -</option>
                        </select>
                      </div>

                      <div class="col-12">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary" id="btnCrearDireccion">Crear Direccion</button>
                      </div>
                      <input type="hidden" id="operacion" name="operacion" value="crear_"/>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>


      </div>
    </div>
  </div>
</div>

<script>
  //#region ...alta,modificacion,borrado de direcciones...
    //manejadores eventos sobre botones Editar Direccion...

    $('button[id^="btnEditarDireccion_"]').click(
        function (ev) {
            //para saber el boton q ha disparado evento: ev.target o con $(this)
            var _idDireccion = $(this).attr('id').split('_')[1];

            //tengo q acceder al modelo de la vista Cliente q el servidor nos ha mapeado, desde javascript
            //para recuperar de la lista de direcciones el objeto Direccion asociado a ese _idDireccion
            var _listaDirecciones = JSON.parse('{{{json cliente.direcciones}}}');
            console.log('la lista de direcciones vale...', _listaDirecciones);

            var _direccionEditar = _listaDirecciones.filter((el, pos, arr) => el._id == _idDireccion)[0];

            console.log(_direccionEditar);


            var _modal = new bootstrap.Modal(document.getElementById('staticBackdrop'));
            _modal.show();

            //cargar los campos del formulario con los datos del objeto _direccionEditar y cambiar etiqueta del boton del formulario
            $('#inputCalle').val(_direccionEditar.calle);
            $('#inputCP').val(_direccionEditar.cp);
            $('#inputPais').val(_direccionEditar.pais);
            //esto funciona si en el nombre de la provincia no apareciesen caracteres aleatorios "_"
            //$('#inputProvincia').val(_direccionEditar.provincia.cpro + "-" + _direccionEditar.pro);
            //busco el <option cuyo value sea "cpro-...." y pongo el attributo selected a true
            $(`#inputProvincia > option[value^=${_direccionEditar.provincia.CPRO}]`).attr('selected', 'true');

            //disparo evento change mmanualmente sobre el select provincias para q me carge municipios (con jquery kaska)
            document.getElementById('inputProvincia').dispatchEvent(new Event('change'));

            //pasa como en las provincias, si en el nombre de los municipios no apareciesen de forma aleatoria "_" funcionaria esto:
            //$('#inputMunicpio').val(_direccionEditar.municipìo.cmum + "-" + _direccionEditar.municipio.dmun50);
            //busco el <option cuyo value sea "cmum-...." y pongo el attributo selected a true
            //OJO!!! hay q dar tiempo a q se recuperen municipios del servicio antes de seleccionar...

            setTimeout(() => $(`#inputMunicipio > option[value^=${_direccionEditar.municipio.CMUM}]`).attr('selected', 'true'), 5000);

            //a ACTUALIZAR DIRECCION y cambio el hidden
            $('#btnCrearDireccion').text('ACTUALIZAR DIRECCION');

            $('#operacion').attr('value', 'modificar_' + _idDireccion);
        }
    );
    
    //manejadores de evento sobre botones borrar direccion
    $('button[id^="btnEliminarDireccion_"]').click(
        function(ev){
            $('#operacion').attr('value', 'borrar_' + $(this).attr('id').split('_')[1]);
            $('#inputMunicipio').removeAttr('disabled');
            $('#formDirecciones').submit();
        }
    ); 
  //#endregion

  //evento CHANGE sobre el select PROVINCIA para hacer una peticion AJAX al servicio externo y recuperar los municipios de esa provincia

  $('#inputProvincia').change(
    function (ev) {
      var _cpro = ev.target.value.split('-')[0];
      if (_cpro != "0") {
        //se ha seleccionado opcion difererente a - Seleccciona Provincia - 
        //haces pet.Ajax, recibes el resultado un JSON y en su prop .data esta el array de objetos JSON de tipo Municipio
        //https://apiv1.geoapi.es/municipios?CPRO=xxxx&type=JSON&key=&sandbox=1
        //te recorres ese array y con jquery añades un option al select municipio 
        $('#inputMunicipio').removeAttr('disabled');

        var _petAjax = new XMLHttpRequest();
        _petAjax.open('GET', `https://apiv1.geoapi.es/municipios?CPRO=${_cpro}&type=JSON&key=&sandbox=1`);
        _petAjax.addEventListener('readystatechange', function (evajax) {
          if (_petAjax.readyState == 4 && _petAjax.status == 200) {
            var _respREST = JSON.parse(_petAjax.responseText);
            //VACIAR LOS OPTION PRECARGADOS... en variable nodo se carga cada option del select inputMunicipios
            Array.from(document.getElementById('inputMunicipio').children)
              .forEach(nodo => { document.getElementById('inputMunicipio').remove(nodo) });

            document.getElementById('inputMunicipio').append('<option value="-1"> -SELECCIONA UN MUNICIPIO- </option>');

            _respREST.data.forEach(
              (muni) => {
                var option = document.createElement('option');
                option.setAttribute('value', muni.CMUM + '-' + muni.DMUN50);
                option.append(document.createTextNode(muni.DMUN50));

                document.getElementById('inputMunicipio').append(option);
              }
            );
          }
        });
        _petAjax.send();

      }
    }
  );

  //---------------------- para mostrar la fecha de nacimiento del cliente en los select -----------------------
  // dos formas
  //    - accediendo desde javascript a variables pasadas a la vista
  //          var _fecha="{{ cliente.fechaNacimiento }}"
  //    - definiendo un helper personalizado seleccionaOption


  //---------------------- seleccion imagen avatar cliente redimensionado y subida contenido en base64 al server por ajax---------
  //$('#selectorImagen').change(

  console.log("{{cliente.fechaNacimiento}}");
  var fechaNac = new Date("{{cliente.fechaNacimiento}}");
  $(`#dia > option[value=${fechaNac.getDay()}]`).attr('selected', 'true');
  $(`#mes > option[value=${fechaNac.getMonth()}]`).attr('selected', 'true');
  $(`#anio > option[value=${fechaNac.getFullYear()}]`).attr('selected', 'true');
  $(`#genero > option[value="${genero}"]`).attr('selected', 'true');

  //---------------------- seleccion imagen avatar cliente redimensionado y subida contenido en base64 al server por ajax---------
  /*
  
    var nuevoContenido = ""; //contenido reducido en base64 de la imagen avatar de usuario...
  
    function muestraRespuestaServer(resp) {
      $('#mensajeRespuesta').html(`<p><span class="text-danger">${resp.mensaje}</span></p>`);
    }
    document.getElementById('selectorImagen').addEventListener('change',
      function (ev) {
        var fichSeleccionado = ev.target.files[0]; //fichero seleccionaado por el cliente...
        var reader = new FileReader();
  
        reader.addEventListener('load', function (evt) {
          var contenido = evt.target.result;
          console.log(contenido);
          //redimensionamos la imagen antes de mostrarla
          var canvas = document.createElement('canvas');
          var contexto = canvas.getContext('2d');
  
          $('#imagenUsuario').attr('src', contenido);
          document.getElementById('imagenUsuario').addEventListener('load', //con jquery peta ¿?
            function (evimg) {
              contexto.drawImage(document.getElementById('imagenUsuario'), 0, 0, 200, 250);
              nuevoContenido = canvas.toDataURL(fichSeleccionado.type);
              console.log('contenido del fichero imagen reducido...', nuevoContenido);
              //$('#imagenUsuario').attr('src', nuevoContenido);
  
              $('#botonUploadImagen').removeAttr('disabled');
  
            }
          ); //cuando se produce la carga de la imagen, es cuando redimensiono usando el canvas
  
        }); // leyendo del fichero imagen en evento load del obj FILEREADER
  
        reader.readAsDataURL(fichSeleccionado); //empiezo a leer el contenido de la imagen
      });
  
    $('#botonUploadImagen').click(
      function (ev) {
        //deshabilitar el boton antes, para evitar q el cliente haga clicks a tope
        $('#botonUploadImagen').attr('disabled', 'true');
  
        console.log('...a subir imagen por ajax a node js....');
        $.post('http://localhost:3000/api/uploadImagen', { fichero: nuevoContenido })
          .done(
            (respuesta) => { console.log(respuesta); muestraRespuestaServer(respuesta); }
          )
          .fail(
            (errores) => { console.log(errores); muestraRespuestaServer(errores); }
          );
      }
    );//subida de imagen al server....*/

  //---------------------- seleccion imagen avatar cliente redimensionado y subida del fichero en MULTIPART-FORM-DATA --------
  var fichSeleccionado;

  function muestraRespuestaServer(resp) {
    $('#mensajeRespuesta').html(`<p><span class="text-danger">${resp.mensaje}</span></p>`);
  }
  document.getElementById('selectorImagen').addEventListener('change',
    function (ev) {
      fichSeleccionado = ev.target.files[0]; //fichero seleccionado por el cliente...
      var reader = new FileReader();

      reader.addEventListener('load', function (evt) {
        $('#imagenUsuario').attr('src', evt.target.result);
        $('#botonUploadImagen').removeAttr('disabled');
      }
      );//evento LOAD del objeto FileReader para leer el contenido del fichero imagen...
      reader.readAsDataURL(fichSeleccionado);//empiezo a leer el contenido de la imagen
    }
  ); //cierro el evento change del input-file

  $('#botonUploadImagen').click(
    function (ev) {
      //deshabilitar el boton antes, para evitar q el cliente haga clicks a tope
      $('#botonUploadImagen').attr('disabled', 'true');
      var datos = new FormData();
      datos.append('fichimagen', fichSeleccionado);

      console.log(datos);

      $.ajax(
        {
          url: 'http://localhost:3000/api/uploadImagenFichero',
          method: 'POST',
          data: datos,
          processData: false,
          contentType: false
        }
      )
        .done(
          (respuesta) => {
            console.log(respuesta);
            muestraRespuestaServer(respuesta);
            $('#imagenUsuario').attr('src', 'http://localhost:3000/public/uploads_imagenes/' + respuesta.otrosdatos);
          }
        )
        .fail(
          (errores) => { console.log(errores); muestraRespuestaServer(errores); }
        );
    }
  );//subida de imagen al server....*/


</script>